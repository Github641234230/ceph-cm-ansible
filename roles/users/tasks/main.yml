---
- name: Filter the managed_users list
  set_fact:
    managed_users:
        "[{% for user in managed_users %}
            {% if user.name in users %}{{ user }},{%endif%}
        {%endfor%}]"
  when: users|length > 0
  tags:
    - always

- name: Filter the managed_admin_users list
  set_fact:
    managed_admin_users:
        "[{% for user in managed_admin_users %}
            {% if user.name in users %}{{ user }},{%endif%}
        {%endfor%}]"
  when: users|length > 0
  tags:
    - always

- name: Create all admin users with sudo access.
  user:
    name: "{{ item.name }}"
    group: "{{ item.name }}"
    groups: sudo
    shell: /bin/bash
    state: present
  with_items: managed_admin_users
  tags:
    - user

- name: Create all users without sudo access.
  user:
    name: "{{ item.name }}"
    shell: /bin/bash
    state: present
  with_items: managed_users
  tags:
    - user

- name: Update authorized_keys for each user.
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.key }}"
  with_items: managed_users|list + managed_admin_users|list
  # Register and retry to work around transient githubusercontent.com issues
  register: ssh_key_update
  until: ssh_key_update|success
  # try for 2 minutes to retrieve the key before failing
  retries: 24
  delay: 5
  tags:
    - pubkeys

- name: Filter the revoked_users list
  set_fact:
    revoked_users:
        "[{% for user in revoked_users %}
            {% if user in users %}'{{ user }}',{%endif%}
        {%endfor%}]"
  when: users|length > 0
  tags:
    - always

- name: Remove revoked users
  user:
    name: "{{ item }}"
    state: absent
  with_items: revoked_users
  tags:
    - user
    - revoke
